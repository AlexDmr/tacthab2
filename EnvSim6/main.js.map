{"version":3,"sources":["webpack:///./projects/worldsim/src/lib/model/Avatar.ts","webpack:///./projects/worldsim/src/lib/model/Location.ts","webpack:///./projects/worldsim/src/lib/model/Obj.ts","webpack:///./projects/worldsim/src/lib/model/Position.ts","webpack:///./projects/worldsim/src/lib/model/World.ts","webpack:///./projects/worldsim/src/lib/model/objects/Lamp.ts","webpack:///./projects/worldsim/src/lib/model/objects/LightSensor.ts","webpack:///./projects/worldsim/src/lib/model/objects/Speakers.ts","webpack:///./projects/worldsim/src/lib/model/objects/TV.ts","webpack:///./projects/worldsim/src/lib/model/objects/Thermometer.ts","webpack:///./projects/worldsim/src/lib/model/types.ts","webpack:///./projects/worldsim/src/lib/worldsim.service.ts","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/configure-obj/configure-lamp.component.ts","webpack:///./src/app/configure-obj/configure-thermometer.component.ts","webpack:///./src/app/configure.component.css","webpack:///./src/app/configure.component.html","webpack:///./src/app/configure.component.ts","webpack:///./src/app/environments.ts","webpack:///./src/app/show-map-obj/show-map-lamp-icon.component.ts","webpack:///./src/app/show-map-obj/show-map-lamp.component.ts","webpack:///./src/app/show-map-obj/show-map-location.component.ts","webpack:///./src/app/show-map-obj/show-map-thermometer.component.ts","webpack:///./src/app/show-map-obj/show-map-tv.component.ts","webpack:///./src/app/show-map-object-template.component.ts","webpack:///./src/app/show-map-object.component.ts","webpack:///./src/app/show-map-slider.component.ts","webpack:///./src/app/show-map.component.ts","webpack:///./src/app/utils.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Location} from './Location';\r\nimport {ChannelOrEmitterInitialDescription, InitialDescription, Update, UpdateType} from './types';\r\nimport {World} from './World';\r\n\r\nexport class Avatar {\r\n  private _name: string;\r\n  private _location: string;\r\n  private _metadata: any;\r\n\r\n  private _onChanged: (u: Update, t: UpdateType) => void;\r\n\r\n  constructor(name: string, location: string, metadata: any) {\r\n    this._name = name;\r\n    this._location = location;\r\n    this._metadata = metadata;\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  get location(): string {\r\n    return this._location;\r\n  }\r\n\r\n  get metadata(): any {\r\n    return this._metadata;\r\n  }\r\n\r\n  get locationRegisterId() {\r\n    return 'Avatar' + World.REGISTER_SEPARATOR + this.name + World.REGISTER_SEPARATOR + 'location';\r\n  }\r\n\r\n  set location(value: string) {\r\n    this._location = value;\r\n  }\r\n\r\n  set onChanged(value: (u: Update, t: UpdateType) => void) {\r\n    this._onChanged = value;\r\n  }\r\n\r\n  changeLocation(newLocation: Location): void {\r\n    if (newLocation.sublocations.length > 0) return;\r\n\r\n    this.location = newLocation.name;\r\n    this.sendUpdate();\r\n  }\r\n\r\n  register(e: InitialDescription) {\r\n    const e1: ChannelOrEmitterInitialDescription = {\r\n      id: this.locationRegisterId,\r\n      type: 'string',\r\n      value: this.location\r\n    };\r\n\r\n    e.emitters.push(e1);\r\n  }\r\n\r\n  sendUpdate(): void {\r\n    const u = {id: this.locationRegisterId, value: this._location};\r\n    this._onChanged(u, UpdateType.EMITTER);\r\n  }\r\n}\r\n","import {Avatar} from './Avatar';\r\nimport {Position} from './Position';\r\n\r\nexport class Location {\r\n  private _name: string;\r\n  private _width: number;\r\n  private _height: number;\r\n  private _metadata: any;\r\n  private _position: Position;\r\n  private _avatars: Avatar[];\r\n  private _sublocations: Location[];\r\n\r\n  constructor(\r\n    name: string,\r\n    width: number,\r\n    height: number,\r\n    position: Position,\r\n    metadata: any,\r\n    personnages: Avatar[],\r\n    sublocations: Location[]\r\n  ) {\r\n    this._name = name;\r\n    this._width = width;\r\n    this._height = height;\r\n    this._metadata = metadata;\r\n    this._position = position;\r\n    this._avatars = personnages;\r\n    this._sublocations = sublocations;\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  get width(): number {\r\n    return this._width;\r\n  }\r\n\r\n  get height(): number {\r\n    return this._height;\r\n  }\r\n\r\n  get metadata(): any {\r\n    return this._metadata;\r\n  }\r\n\r\n  get position(): Position {\r\n    return this._position;\r\n  }\r\n\r\n  get avatars(): Avatar[] {\r\n    return this._avatars;\r\n  }\r\n\r\n  get avatarsRec(): Avatar[] {\r\n    let as = [];\r\n    this._avatars.forEach(a => as.push(a));\r\n    this._sublocations.forEach(l => as = as.concat(l.avatarsRec));\r\n    return as;\r\n  }\r\n\r\n  get sublocations(): Location[] {\r\n    return this._sublocations;\r\n  }\r\n\r\n  addAvatar(p: Avatar) {\r\n    this._avatars.push(p);\r\n    p.changeLocation(this);\r\n  }\r\n\r\n  addSublocation(sl: Location) {\r\n    this._sublocations.push(sl);\r\n  }\r\n\r\n  removeAvatar(a: Avatar) {\r\n    const io = this._avatars.indexOf(a);\r\n    if (io < 0) {\r\n      console.error('Avatar does not exists on this location.');\r\n      return;\r\n    }\r\n    this._avatars.splice(io, 1);\r\n  }\r\n}\r\n","import {Position} from './Position';\r\nimport {InitialDescription, Update, UpdateType} from './types';\r\nimport {World} from './World';\r\n\r\nexport class Obj {\r\n  private _name: string;\r\n  private _position: Position;\r\n  private _onChanged: (u: Update, t: UpdateType) => void;\r\n\r\n  constructor(name: string, position: Position) {\r\n    this._name = name;\r\n    this._position = position;\r\n  }\r\n\r\n  static getObjName(id: string): string {\r\n    return id.split(World.REGISTER_SEPARATOR)[0];\r\n  }\r\n\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  get position(): Position {\r\n    return this._position;\r\n  }\r\n\r\n  set onChanged(value: (u: Update, t: UpdateType) => void) {\r\n    this._onChanged = value;\r\n  }\r\n\r\n  register(e: InitialDescription) {\r\n  }\r\n\r\n  update(u: Update): boolean {\r\n    return false;\r\n  }\r\n\r\n  protected sendUpdate(u: Update, t: UpdateType): void {\r\n    this._onChanged(u, t);\r\n  }\r\n\r\n  protected completedId(s: string): string {\r\n    return 'Object' + World.REGISTER_SEPARATOR + this.name + World.REGISTER_SEPARATOR + s;\r\n  }\r\n}\r\n","export class Position {\r\n  private _x: number;\r\n  private _y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this._x = x;\r\n    this._y = y;\r\n  }\r\n\r\n  static constructFrom(o: any): Position | null {\r\n    const x = o.x;\r\n    const y = o.y;\r\n\r\n    if (x === null || y === null) {\r\n      return null;\r\n    }\r\n\r\n    return new Position(x, y);\r\n  }\r\n\r\n  get x(): number {\r\n    return this._x;\r\n  }\r\n\r\n  get y(): number {\r\n    return this._y;\r\n  }\r\n}\r\n","import {Location} from './Location';\r\nimport {Obj} from './Obj';\r\nimport {Update, UpdateType} from './types';\r\nimport {Avatar} from './Avatar';\r\n\r\nexport class World {\r\n  public static readonly REGISTER_SEPARATOR = '::';\r\n\r\n  private readonly _locations: Location[];\r\n  private readonly _objects: Obj[];\r\n  private _scale: {x: number, y: number};\r\n\r\n  private readonly _observers: ((u: Update, t: UpdateType) => void)[];\r\n\r\n  constructor() {\r\n    this._locations = [];\r\n    this._objects = [];\r\n    this._observers = [];\r\n    this._scale = {x: 1, y: 1};\r\n  }\r\n\r\n  public addLocation(location: Location) {\r\n    this._locations.push(location);\r\n    location.avatarsRec.forEach(a => a.onChanged = (u: Update, t: UpdateType) => this.sendUpdate(u, t));\r\n  }\r\n\r\n  public addObject(object: Obj) {\r\n    this._objects.push(object);\r\n    object.onChanged = (u: Update, t: UpdateType) => this.sendUpdate(u, t);\r\n  }\r\n\r\n  public addObserver(f: (u: Update, t: UpdateType) => void): void {\r\n    this._observers.push(f);\r\n  }\r\n\r\n  public clean(): void {\r\n    this._objects.splice(0, this._objects.length);\r\n    this._locations.splice(0, this._locations.length);\r\n    this._scale = {x: 1, y: 1};\r\n  }\r\n\r\n  calculateHeight(): number {\r\n    let h = 0;\r\n    for (const l of this.locations) {\r\n      if (h < l.height + l.position.y) {\r\n        h = l.height + l.position.y;\r\n      }\r\n    }\r\n\r\n    return h;\r\n  }\r\n\r\n  calculateWidth(): number {\r\n    let w = 0;\r\n    for (const l of this.locations) {\r\n      if (w < l.width + l.position.x) {\r\n        w = l.width + l.position.x;\r\n      }\r\n    }\r\n\r\n    return w;\r\n  }\r\n\r\n  sendUpdate(u: Update, t: UpdateType): void {\r\n    this._observers.forEach(o => o(u, t));\r\n  }\r\n\r\n  get locations(): Location[] {\r\n    return this._locations;\r\n  }\r\n\r\n  get objects(): Obj[] {\r\n    return this._objects;\r\n  }\r\n\r\n  get scale(): { x: number; y: number } {\r\n    return this._scale;\r\n  }\r\n\r\n  get avatars(): Avatar[] {\r\n    const avatars = [];\r\n    this._locations.forEach(l => l.avatarsRec.forEach(a => avatars.push(a)));\r\n    console.log(avatars);\r\n    return avatars;\r\n  }\r\n\r\n  set scale(scale: {x: number, y: number}) {\r\n    this._scale = scale;\r\n  }\r\n}\r\n","import {Position} from '../Position';\r\nimport {Obj} from '../Obj';\r\nimport {ChannelOrEmitterInitialDescription, InitialDescription, Update} from '../types';\r\n\r\nexport class Lamp extends Obj {\r\n  public static readonly INTENSITY_MIN = 0;\r\n  public static readonly INTENSITY_MAX = 1;\r\n\r\n  private static readonly REGISTER_COLOR = 'lamp_color';\r\n  private static readonly REGISTER_INTENSITY = 'lamp_intensity';\r\n\r\n  private _intensity: number;\r\n  private _color: string;\r\n\r\n  constructor(name: string, position: Position, color: string, intensity: number) {\r\n    super(name, position);\r\n    this._color = color;\r\n    this._intensity = intensity;\r\n  }\r\n\r\n  static isInstance(o): boolean {\r\n    return o instanceof Lamp;\r\n  }\r\n\r\n  static constructFrom(o: any): Lamp | null {\r\n    const name = o.name;\r\n    const position = Position.constructFrom(o.position);\r\n    const color = o.color;\r\n    const intensity = o.intensity;\r\n\r\n    if (name === null || position === null || color === null || intensity === null) {\r\n      return null;\r\n    }\r\n\r\n    return new Lamp(name, position, color, intensity);\r\n  }\r\n\r\n  get intensity(): number {\r\n    return this._intensity;\r\n  }\r\n\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n\r\n  set intensity(value: number) {\r\n    this._intensity = Math.max(Lamp.INTENSITY_MIN, Math.min(value, Lamp.INTENSITY_MAX));\r\n  }\r\n\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n\r\n  modifyIntensity(modifier: number): void {\r\n    this.intensity += modifier;\r\n  }\r\n\r\n  register(e: InitialDescription) {\r\n    const e1: ChannelOrEmitterInitialDescription = {\r\n      id: this.completedId(Lamp.REGISTER_INTENSITY),\r\n      type: 'number',\r\n      value: this.intensity\r\n    };\r\n    const e2: ChannelOrEmitterInitialDescription = {\r\n      id: this.completedId(Lamp.REGISTER_COLOR),\r\n      type: 'string',\r\n      value: this.color\r\n    };\r\n\r\n    e.channels.push(e1);\r\n    e.channels.push(e2);\r\n  }\r\n\r\n  update(u: Update): boolean {\r\n    if (u.id === this.completedId(Lamp.REGISTER_COLOR)) {\r\n      this.intensity = u.value;\r\n    } else if (u.id === this.completedId(Lamp.REGISTER_INTENSITY)) {\r\n      this.color = u.value;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import {Position} from '../Position';\r\nimport {Obj} from '../Obj';\r\nimport {ChannelOrEmitterInitialDescription, InitialDescription, UpdateType} from '../types';\r\n\r\nexport class LightSensor extends Obj {\r\n  public static readonly LIGHT_MIN = 0;\r\n  public static readonly LIGHT_MAX = 1;\r\n\r\n  private static readonly REGISTER_LIGHT = 'lightsensor_light';\r\n\r\n  private _light: number;\r\n\r\n  constructor(name: string, position: Position, light: number) {\r\n    super(name, position);\r\n    this._light = light;\r\n  }\r\n\r\n  static isInstance(o): boolean {\r\n    return o instanceof LightSensor;\r\n  }\r\n\r\n  static constructFrom(o: any): LightSensor | null {\r\n    const name = o.name;\r\n    const position = Position.constructFrom(o.position);\r\n    const light = o.light;\r\n\r\n    if (name === null || position === null || light === null) {\r\n      return null;\r\n    }\r\n\r\n    return new LightSensor(name, position, light);\r\n  }\r\n\r\n  get light(): number {\r\n    return this._light;\r\n  }\r\n\r\n  set light(value: number) {\r\n    const ll = this._light;\r\n    this._light = Math.max(LightSensor.LIGHT_MIN, Math.min(value, LightSensor.LIGHT_MAX));\r\n    if (ll !== this._light) {\r\n      const u = {id: this.completedId(LightSensor.REGISTER_LIGHT), value: this._light};\r\n      this.sendUpdate(u, UpdateType.EMITTER);\r\n    }\r\n  }\r\n\r\n  modifyLight(modifier: number): void {\r\n    if (modifier === 0) {\r\n      return;\r\n    }\r\n    this.light += modifier;\r\n  }\r\n\r\n  register(e: InitialDescription) {\r\n    const e1: ChannelOrEmitterInitialDescription = {\r\n      id: this.completedId(LightSensor.REGISTER_LIGHT),\r\n      type: 'number',\r\n      value: this.light\r\n    };\r\n\r\n    e.emitters.push(e1);\r\n  }\r\n}\r\n","import {Position} from '../Position';\r\nimport {Obj} from '../Obj';\r\nimport {ChannelOrEmitterInitialDescription, InitialDescription, Update} from '../types';\r\n\r\nexport class Speakers extends Obj {\r\n  public static readonly VOLUME_MIN = 0;\r\n  public static readonly VOLUME_MAX = 1;\r\n\r\n  private static readonly REGISTER_VOLUME = 'speakers_volume';\r\n\r\n  private _volume: number;\r\n\r\n  constructor(name: string, position: Position, volume: number) {\r\n    super(name, position);\r\n    this._volume = volume;\r\n  }\r\n\r\n  static constructFrom(o: any): Speakers | null {\r\n    const name = o.name;\r\n    const position = Position.constructFrom(o.position);\r\n    const volume = o.volume;\r\n\r\n    if (name === null || position === null || volume === null) {\r\n      return null;\r\n    }\r\n\r\n    return new Speakers(name, position, volume);\r\n  }\r\n\r\n  get volume(): number {\r\n    return this._volume;\r\n  }\r\n\r\n  set volume(value: number) {\r\n    this._volume = Math.max(Speakers.VOLUME_MIN, Math.min(value, Speakers.VOLUME_MAX));\r\n  }\r\n\r\n  register(e: InitialDescription) {\r\n    const e1: ChannelOrEmitterInitialDescription = {\r\n      id: this.completedId(Speakers.REGISTER_VOLUME),\r\n      type: 'number',\r\n      value: this.volume\r\n    };\r\n\r\n    e.channels.push(e1);\r\n  }\r\n\r\n  update(u: Update): boolean {\r\n    if (u.id === this.completedId(Speakers.REGISTER_VOLUME)) {\r\n      this.volume = u.value;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import {Position} from '../Position';\r\nimport {Obj} from '../Obj';\r\nimport {ChannelOrEmitterInitialDescription, InitialDescription, Update} from '../types';\r\n\r\nexport class TV extends Obj {\r\n  public static readonly VOLUME_MIN = 0;\r\n  public static readonly VOLUME_MAX = 1;\r\n\r\n  public static readonly CHANNEL_MIN = 0;\r\n  public static readonly CHANNEL_MAX = 18;\r\n\r\n  private static readonly REGISTER_CHANNEL = 'tv_channel';\r\n  private static readonly REGISTER_VOLUME = 'tv_volume';\r\n\r\n  private _channel: number;\r\n  private _volume: number;\r\n\r\n  constructor(name: string, position: Position, channel: number, volume: number) {\r\n    super(name, position);\r\n    this._channel = channel;\r\n    this._volume = volume;\r\n  }\r\n\r\n  static isInstance(o): boolean {\r\n    return o instanceof TV;\r\n  }\r\n\r\n  static constructFrom(o: any): TV | null {\r\n    const name = o.name;\r\n    const position = Position.constructFrom(o.position);\r\n    const channel = o.channel;\r\n    const volume = o.volume;\r\n\r\n    if (name === null || position === null || channel === null || volume === null) {\r\n      return null;\r\n    }\r\n\r\n    return new TV(name, position, channel, volume);\r\n  }\r\n\r\n  get channel(): number {\r\n    return this._channel;\r\n  }\r\n\r\n  get volume(): number {\r\n    return this._volume;\r\n  }\r\n\r\n  set channel(value: number) {\r\n    this._channel = Math.max(TV.CHANNEL_MIN, Math.min(value, TV.CHANNEL_MAX));\r\n  }\r\n\r\n  set volume(value: number) {\r\n    this._volume = Math.max(TV.VOLUME_MIN, Math.min(value, TV.VOLUME_MAX));\r\n  }\r\n\r\n  modifyVolume(modifier: number): void {\r\n    this.volume += modifier;\r\n  }\r\n\r\n  register(e: InitialDescription) {\r\n    const e1: ChannelOrEmitterInitialDescription = {\r\n      id: this.completedId(TV.REGISTER_CHANNEL),\r\n      type: 'number',\r\n      value: this.channel\r\n    };\r\n    const e2: ChannelOrEmitterInitialDescription = {\r\n      id: this.completedId(TV.REGISTER_VOLUME),\r\n      type: 'string',\r\n      value: this.volume\r\n    };\r\n\r\n    e.channels.push(e1);\r\n    e.channels.push(e2);\r\n  }\r\n\r\n  update(u: Update): boolean {\r\n    if (u.id === this.completedId(TV.REGISTER_VOLUME)) {\r\n      this.volume = u.value;\r\n    } else if (u.id === this.completedId(TV.REGISTER_CHANNEL)) {\r\n      this.channel = u.value;\r\n    } else {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import {Position} from '../Position';\r\nimport {Obj} from '../Obj';\r\nimport {ChannelOrEmitterInitialDescription, InitialDescription, UpdateType} from '../types';\r\n\r\nexport class Thermometer extends Obj {\r\n  public static readonly TEMPERATURE_MIN = 10;\r\n  public static readonly TEMPERATURE_MAX = 30;\r\n\r\n  private static readonly REGISTER_TEMPERATURE = 'thermometer_temperature';\r\n\r\n  private _temperature: number;\r\n\r\n  constructor(name: string, position: Position, temperature: number) {\r\n    super(name, position);\r\n    this._temperature = temperature;\r\n  }\r\n\r\n  static isInstance(o): boolean {\r\n    return o instanceof Thermometer;\r\n  }\r\n\r\n  static constructFrom(o: any): Thermometer | null {\r\n    const name = o.name;\r\n    const position = Position.constructFrom(o.position);\r\n    const temperature = o.temperature;\r\n\r\n    if (name === null || position === null || temperature === null) {\r\n      return null;\r\n    }\r\n\r\n    return new Thermometer(name, position, temperature);\r\n  }\r\n\r\n  set temperature(value: number) {\r\n    const lt = this._temperature;\r\n    this._temperature = Math.max(Thermometer.TEMPERATURE_MIN, Math.min(value, Thermometer.TEMPERATURE_MAX));\r\n    if (lt !== this._temperature) {\r\n      const u = {id: this.completedId(Thermometer.REGISTER_TEMPERATURE), value: this._temperature};\r\n      this.sendUpdate(u, UpdateType.EMITTER);\r\n    }\r\n  }\r\n\r\n  get temperature(): number {\r\n    return this._temperature;\r\n  }\r\n\r\n  modifyTemperature(modifier: number): void {\r\n    if (modifier === 0) {\r\n      return;\r\n    }\r\n    this.temperature += modifier;\r\n  }\r\n\r\n  register(e: InitialDescription) {\r\n    const e1: ChannelOrEmitterInitialDescription = {\r\n      id: this.completedId(Thermometer.REGISTER_TEMPERATURE),\r\n      type: 'number',\r\n      value: this.temperature\r\n    };\r\n\r\n    e.emitters.push(e1);\r\n  }\r\n}\r\n","export type InitialDescription = {\r\n  simulatedEnvironmentName: string;\r\n  channels: ChannelOrEmitterInitialDescription[];\r\n  emitters: ChannelOrEmitterInitialDescription[];\r\n  eventers: EventerInitialDescription[];\r\n};\r\n\r\nexport type ChannelOrEmitterInitialDescription = {\r\n  id: string;\r\n  type: string;\r\n  value: any;\r\n};\r\n\r\nexport type EventerInitialDescription = {\r\n  id: string;\r\n  type: string;\r\n};\r\n\r\nexport type Update = {\r\n  id: string;\r\n  value: any;\r\n};\r\n\r\nexport enum UpdateType {\r\n  EMITTER,\r\n  CHANNEL,\r\n  EVENT\r\n}\r\n\r\nexport interface JSONWorld {\r\n  name: string;\r\n  scale?: JSONScale;\r\n  objects: JSONObj[];\r\n  locations: JSONLocation[];\r\n}\r\n\r\nexport interface JSONScale {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface JSONPosition {\r\n  x: number;\r\n  y: number;\r\n}\r\n\r\nexport interface JSONLocation {\r\n  name: string;\r\n  width: number;\r\n  height: number;\r\n  position: JSONPosition;\r\n  avatars?: JSONAvatar[];\r\n  sublocations?: JSONLocation[];\r\n}\r\n\r\nexport interface JSONAvatar {\r\n  name: string;\r\n}\r\n\r\nexport interface JSONObj {\r\n  name: string;\r\n  type: string;\r\n  position: JSONPosition;\r\n  // Individual properties\r\n  color?: string;\r\n  intensity?: number;\r\n  volume?: number;\r\n  light?: number;\r\n  channel?: number;\r\n  temperature?: number;\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {World} from './model/World';\r\nimport {Lamp} from './model/objects/Lamp';\r\nimport {Avatar} from './model/Avatar';\r\nimport {Speakers} from './model/objects/Speakers';\r\nimport {Location} from './model/Location';\r\nimport {TV} from './model/objects/TV';\r\nimport {Thermometer} from './model/objects/Thermometer';\r\nimport {LightSensor} from './model/objects/LightSensor';\r\nimport {Obj} from './model/Obj';\r\nimport {Position} from './model/Position';\r\n\r\nimport {connect} from 'socket.io-client';\r\nimport {InitialDescription, JSONWorld, Update, UpdateType} from './model/types';\r\n\r\n/**\r\n * Entry point service for worldsim lib.\r\n */\r\n@Injectable(/*{\r\n  providedIn: WorldsimModule\r\n}*/)\r\nexport class WorldsimService {\r\n  /**\r\n   * Namespace chosen in the server.\r\n   * @type {string}\r\n   */\r\n  private static readonly NAMESPACE = 'simulator';\r\n\r\n  /**\r\n   * Name of the communication channels, must be the same as those used in the server\r\n   * @type {string}\r\n   */\r\n  private static readonly EVENT_UPDATE_EMITTER = 'updateEmitter';\r\n  private static readonly EVENT_UPDATE_CHANNEL = 'updateChannel';\r\n  private static readonly EVENT_UPDATE_EVENTER = 'triggerEvent';\r\n  private static readonly EVENT_INITIALDESCRIPTION = 'initialDescription';\r\n\r\n  /**\r\n   * World object\r\n   */\r\n  private _world: World;\r\n\r\n  /**\r\n   * Socket communicating with the remote (or local) server.\r\n   */\r\n  private _socket: SocketIOClient.Socket;\r\n\r\n  /**\r\n   * Boolean indicating if we are connected to the server.\r\n   * @type {boolean}\r\n   * @private\r\n   */\r\n  private _isConnected = false;\r\n\r\n  private _initialDescription: InitialDescription;\r\n\r\n  constructor() {\r\n    this._world = new World();\r\n    this._socket = connect('/' + WorldsimService.NAMESPACE);\r\n\r\n    // Setup listeners on the socket\r\n    this._socket.on('connect', () => {\r\n      this._isConnected = true;\r\n\r\n      // Send initial description if we did not send it already.\r\n      if (this._initialDescription) {\r\n        this.sendInitialDescription();\r\n      }\r\n    });\r\n    this._socket.on('disconnect', () => this._isConnected = false);\r\n    this._socket.on(WorldsimService.EVENT_UPDATE_CHANNEL, (u: Update) => this.receivedUpdate(u));\r\n  }\r\n\r\n  /**\r\n   * Load the environment contained in env.\r\n   * @param {JSONWorld} env the environment.\r\n   */\r\n  public loadEnvironment(env: JSONWorld): boolean {\r\n    if (!env.name) {\r\n      return false;\r\n    }\r\n\r\n    // Init objects\r\n    for (const o of env.objects) {\r\n      let no: Obj;\r\n      switch (o.type) {\r\n        case 'Lamp':\r\n          no = Lamp.constructFrom(o);\r\n          break;\r\n        case 'Speakers':\r\n          no = Speakers.constructFrom(o);\r\n          break;\r\n        case 'TV':\r\n          no = TV.constructFrom(o);\r\n          break;\r\n        case 'Thermometer':\r\n          no = Thermometer.constructFrom(o);\r\n          break;\r\n        case 'LightSensor':\r\n          no = LightSensor.constructFrom(o);\r\n          break;\r\n      }\r\n\r\n      if (no !== null) {\r\n        this._world.addObject(no);\r\n      } else {\r\n        this.cleanEnvironment();\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Init locations\r\n    for (const l of env.locations) {\r\n      this._world.addLocation(this.constructLocation(l));\r\n    }\r\n    if (!this._world.locations.find(l => l.name === 'Outside')) {\r\n      const w = this._world.calculateWidth();\r\n      const h = this._world.calculateHeight();\r\n      const l = new Location(\r\n        'Outside',\r\n        w,\r\n        h / 3,\r\n        new Position(0, h),\r\n        undefined,\r\n        [],\r\n        []);\r\n      this._world.addLocation(l);\r\n    }\r\n\r\n    // Search for a valid scale\r\n    if (env.scale) {\r\n      if (env.scale.x > 0 && env.scale.y > 0) {\r\n        this._world.scale = env.scale;\r\n      } else {\r\n        this.cleanEnvironment();\r\n        return false;\r\n      }\r\n    }\r\n\r\n    this._world.addObserver(this.sendUpdate.bind(this));\r\n\r\n    const id: InitialDescription = {\r\n      simulatedEnvironmentName: env.name,\r\n      channels: [],\r\n      emitters: [],\r\n      eventers: []\r\n    };\r\n\r\n    this._world.objects.forEach(o => o.register(id));\r\n    this._world.avatars.forEach(o => o.register(id));\r\n\r\n    this._initialDescription = id;\r\n\r\n    if (this._isConnected) {\r\n      this.sendInitialDescription();\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  private cleanEnvironment(): void {\r\n    this._world.clean();\r\n  }\r\n\r\n  /**\r\n   * Send an update to the server if we are connected.\r\n   * @param {Update} u the update to send.\r\n   * @param {UpdateType} t the type of the update to send.\r\n   */\r\n  private sendUpdate(u: Update, t: UpdateType): void {\r\n    if (!this._isConnected) {\r\n      console.log('Not connected.');\r\n      return;\r\n    }\r\n\r\n    switch (t) {\r\n      case UpdateType.EMITTER:\r\n        this._socket.emit(WorldsimService.EVENT_UPDATE_EMITTER, u);\r\n        break;\r\n      case UpdateType.CHANNEL:\r\n        this._socket.emit(WorldsimService.EVENT_UPDATE_CHANNEL, u);\r\n        break;\r\n      case UpdateType.EVENT:\r\n        this._socket.emit(WorldsimService.EVENT_UPDATE_EVENTER, u);\r\n        break;\r\n      default:\r\n        console.error('Update type incorrect');\r\n        return;\r\n    }\r\n\r\n    console.log('Sent update.');\r\n  }\r\n\r\n  private receivedUpdate(u: Update) {\r\n    const objName = Obj.getObjName(u.id);\r\n    const o: Obj = this._world.objects.find(p => p.name === objName);\r\n    if (!o.update(u)) {\r\n      console.error('Could not find the right object to update!');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Send the initial description of the environment to the server if we can.\r\n   */\r\n  private sendInitialDescription(): void {\r\n    if (this._isConnected && this._initialDescription) {\r\n      this._socket.emit(WorldsimService.EVENT_INITIALDESCRIPTION, this._initialDescription);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Construct a location, recursively, with its sublocations.\r\n   * @param sl the description of the location\r\n   * @returns {Location} the constructed location object.\r\n   */\r\n  private constructLocation(sl: any): Location {\r\n    const ps: Avatar[] = [];\r\n    const ls: Location[] = [];\r\n\r\n    if (sl.avatars) {\r\n      for (const p of sl.avatars) {\r\n        ps.push(new Avatar(p.name, sl.name, (p.metadata ? p.metadata : undefined)));\r\n      }\r\n    }\r\n\r\n    if (sl.sublocations) {\r\n      for (const l of sl.sublocations) {\r\n        ls.push(this.constructLocation(l));\r\n      }\r\n    }\r\n\r\n    return new Location(\r\n      sl.name,\r\n      sl.width,\r\n      sl.height,\r\n      sl.position,\r\n      (sl.metadata ? sl.metadata : undefined),\r\n      ps,\r\n      ls\r\n    );\r\n  }\r\n\r\n  get world(): World {\r\n    return this._world;\r\n  }\r\n\r\n  get isConnected(): boolean {\r\n    return this._isConnected;\r\n  }\r\n}\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"#background {\\r\\n  background: url('background-paint.jpg');\\r\\n  background-size: cover;\\r\\n  -webkit-filter: blur(6px);\\r\\n          filter: blur(6px);\\r\\n  z-index: -1;\\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  right: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n}\\r\\n\\r\\n#title {\\r\\n  text-align: center;\\r\\n  background-color: hsl(215, 8%, 48%);\\r\\n  color: white;\\r\\n  margin: 0;\\r\\n  padding: 12px 0;\\r\\n}\\r\\n\\r\\n#intro {\\r\\n  background-color: hsl(215, 8%, 60%);\\r\\n  margin: 0;\\r\\n  padding: 10px;\\r\\n  color: #ffffff;\\r\\n}\\r\\n\\r\\n.title {\\r\\n  background-color: hsla(215, 10%, 8%, .4);\\r\\n  color: white;\\r\\n  padding: 12px 0;\\r\\n  margin: 0;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.items {\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n}\\r\\n\\r\\n.item {\\r\\n  -ms-flex-positive: 1;\\r\\n      flex-grow: 1;\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  -ms-flex-pack: center;\\r\\n      justify-content: center;\\r\\n  /*background: linear-gradient(to right, #444444c0, #555555c0);*/\\r\\n  background: linear-gradient(to right, #777777c0, #888888c0);\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n#map {\\r\\n  display: -ms-flexbox;\\r\\n  display: flex;\\r\\n  color: black;\\r\\n  margin: 12px 0;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"background\\\"></div>\\r\\n\\r\\n<div id=\\\"container\\\">\\r\\n  <h1 id=\\\"title\\\">\\r\\n    Environment Simulator\\r\\n  </h1>\\r\\n\\r\\n  <h3 id=\\\"intro\\\">\\r\\n    Env Sim: Environment simulator for my M1 Info. It simulates the environment. To use with CCBL server.\\r\\n  </h3>\\r\\n\\r\\n  <div id=\\\"content\\\">\\r\\n    <h2 class=\\\"title\\\">\\r\\n      Environment description\\r\\n    </h2>\\r\\n\\r\\n    <div class=\\\"items\\\">\\r\\n      <div class=\\\"item\\\">\\r\\n        <div class=\\\"item-wrapper\\\">\\r\\n          <h2>List of objects<span style=\\\"display: block; font-size: 60%\\\">Objects can <i>send or receive</i> data to or from the server</span></h2>\\r\\n          <ul>\\r\\n            <li *ngFor=\\\"let o of worldsimService.world.objects\\\">\\r\\n              <b>{{ o.name }}</b> at <span class=\\\"list-location\\\">({{ o.position.x }}, {{ o.position.y }})</span>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"item\\\">\\r\\n        <div class=\\\"item-wrapper\\\">\\r\\n          <h2>List of locations</h2>\\r\\n          <ul>\\r\\n            <li *ngFor=\\\"let l of worldsimService.world.locations\\\">\\r\\n              <app-show-location [location]=\\\"l\\\"></app-show-location>\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <h2 class=\\\"title\\\">\\r\\n      Location Map (Beta)\\r\\n    </h2>\\r\\n\\r\\n    <div class=\\\"items\\\">\\r\\n      <div class=\\\"item\\\">\\r\\n        <div class=\\\"item-wrapper\\\" id=\\\"map\\\">\\r\\n          <app-show-map\\r\\n            [onConfigure]=\\\"onConfigureBinded\\\"\\r\\n            [world]=\\\"worldsimService.world\\\"\\r\\n            [magnificationX]=\\\"magnificationX\\\"\\r\\n            [magnificationY]=\\\"magnificationY\\\">\\r\\n          </app-show-map>\\r\\n\\r\\n          <app-configure\\r\\n            [obj]=\\\"configure\\\">\\r\\n          </app-configure>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input} from '@angular/core';\r\nimport {WorldsimService} from '../../projects/worldsim/src/lib/worldsim.service';\r\nimport {Obj} from '../../projects/worldsim/src/lib/model/Obj';\r\nimport {Location} from '../../projects/worldsim/src/lib/model/Location';\r\nimport {environments} from './environments';\r\n\r\n@Component({\r\n  selector: 'app-show-location',\r\n  styles: [],\r\n  template: `\r\n    <b>{{ location.name }}</b> &rArr;\r\n    <span class=\"list-dimensions\">{{location.width}}x{{location.height}}</span>\r\n    at <span class=\"list-location\">({{location.position.x + ', ' + location.position.y}})</span>\r\n    <ul *ngIf=\"location.sublocations.length > 0\">\r\n      <li *ngFor=\"let l of location.sublocations\">\r\n        <app-show-location [location]=\"l\"></app-show-location>\r\n      </li>\r\n    </ul>\r\n  `\r\n})\r\nexport class ShowLocationComponent {\r\n  @Input() location: Location;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  magnificationX = 1;\r\n  magnificationY = 1;\r\n\r\n  configure: Obj;\r\n\r\n  constructor(public worldsimService: WorldsimService) {\r\n    this.worldsimService.loadEnvironment(environments.find(p => p.name === 'Maison'));\r\n    this.magnificationX = this.worldsimService.world.scale.x;\r\n    this.magnificationY = this.worldsimService.world.scale.y;\r\n  }\r\n\r\n  onConfigure(param: Obj): void {\r\n    this.configure = param;\r\n  }\r\n\r\n  get onConfigureBinded() {\r\n    return this.onConfigure.bind(this);\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  AppComponent,\r\n  ShowLocationComponent\r\n} from './app.component';\r\n\r\nimport {WorldsimService} from '../../projects/worldsim/src/lib/worldsim.service';\r\nimport {ShowMapComponent} from './show-map.component';\r\nimport {ShowMapLocationComponent} from './show-map-obj/show-map-location.component';\r\nimport {ShowMapObjectComponent} from './show-map-object.component';\r\nimport {ShowMapLampComponent} from './show-map-obj/show-map-lamp.component';\r\nimport {ConfigureComponent} from './configure.component';\r\nimport {ConfigureLampComponent} from './configure-obj/configure-lamp.component';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {ShowMapTvComponent} from './show-map-obj/show-map-tv.component';\r\nimport {DecimalPipe} from '@angular/common';\r\nimport {MatInputModule} from '@angular/material';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {ShowMapSliderComponent} from './show-map-slider.component';\r\nimport {ShowMapThermometerComponent} from './show-map-obj/show-map-thermometer.component';\r\nimport {ConfigureThermometerComponent} from './configure-obj/configure-thermometer.component';\r\nimport {DragDropModule} from 'alx-dragdrop';\r\nimport {ShowMapLampIconComponent} from './show-map-obj/show-map-lamp-icon.component';\r\nimport {ShowMapObjectTemplateComponent} from './show-map-object-template.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ShowLocationComponent,\r\n    ShowMapComponent,\r\n    ShowMapLocationComponent,\r\n    ShowMapObjectComponent,\r\n    ShowMapObjectTemplateComponent,\r\n    ShowMapLampComponent,\r\n    ShowMapLampIconComponent,\r\n    ShowMapTvComponent,\r\n    ShowMapThermometerComponent,\r\n    ShowMapSliderComponent,\r\n    ConfigureComponent,\r\n    ConfigureLampComponent,\r\n    ConfigureThermometerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MatInputModule,\r\n    DragDropModule\r\n  ],\r\n  providers: [\r\n    WorldsimService,\r\n    DecimalPipe\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import {Component, Input} from '@angular/core';\r\nimport {Lamp} from '../../../projects/worldsim/src/lib/model/objects/Lamp';\r\n\r\n@Component({\r\n  selector: 'app-configure-lamp',\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <form>\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n          matInput\r\n          name=\"lamp-color\"\r\n          placeholder=\"Color\"\r\n          [(ngModel)]=\"lamp.color\">\r\n      </mat-form-field>\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n          matInput\r\n          name=\"lamp-intensity\"\r\n          placeholder=\"Intensity\"\r\n          [(ngModel)]=\"lamp.intensity\"\r\n          type=\"number\"\r\n          step=\"0.05\"\r\n          min=\"0\"\r\n          max=\"1\">\r\n      </mat-form-field>\r\n    </form>\r\n  `\r\n})\r\nexport class ConfigureLampComponent {\r\n  @Input() lamp: Lamp;\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {Thermometer} from '../../../projects/worldsim/src/lib/model/objects/Thermometer';\r\n\r\n@Component({\r\n  selector: 'app-configure-thermometer',\r\n  styles: [\r\n    `\r\n      .full-width {\r\n        width: 100%;\r\n      }\r\n    `\r\n  ],\r\n  template: `\r\n    <form>\r\n      <mat-form-field class=\"full-width\">\r\n        <input\r\n          matInput\r\n          name=\"temp-color\"\r\n          placeholder=\"Temperature\"\r\n          type=\"number\"\r\n          step=\"1\"\r\n          [min]=\"Thermometer.TEMPERATURE_MIN\"\r\n          [max]=\"Thermometer.TEMPERATURE_MAX\"\r\n          [(ngModel)]=\"thermometer.temperature\">\r\n      </mat-form-field>\r\n    </form>\r\n  `\r\n})\r\nexport class ConfigureThermometerComponent {\r\n  @Input() thermometer: Thermometer;\r\n  Thermometer = Thermometer;\r\n}\r\n","module.exports = \"#container {\\r\\n  padding: 0 20px 10px 20px;\\r\\n  margin-left: 40px;\\r\\n  background-color: #eee;\\r\\n  border: 2px solid #444;\\r\\n  width: 300px;\\r\\n}\\r\\n\\r\\n#title {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n#description {\\r\\n  text-align: justify;\\r\\n  font-style: italic;\\r\\n}\\r\\n\"","module.exports = \"<div id=\\\"container\\\">\\r\\n  <h3 id=\\\"title\\\">Configure panel</h3>\\r\\n\\r\\n  <div *ngIf=\\\"obj != null\\\">\\r\\n    <p>\\r\\n      Configure {{obj.name}}\\r\\n    </p>\\r\\n\\r\\n    <app-configure-lamp *ngIf=\\\"Lamp.isInstance(obj)\\\" [lamp]=\\\"obj\\\"></app-configure-lamp>\\r\\n    <app-configure-thermometer *ngIf=\\\"Thermometer.isInstance(obj)\\\" [thermometer]=\\\"obj\\\"></app-configure-thermometer>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"obj == null\\\" id=\\\"description\\\">\\r\\n    <p>\\r\\n      Here, you can configure an object.\\r\\n      Please click (without dragging) an object on the map,\\r\\n      and you will be able to see and change any value of it.\\r\\n    </p>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import {Component, Input} from '@angular/core';\r\nimport {Obj} from '../../projects/worldsim/src/lib/model/Obj';\r\nimport {Lamp} from '../../projects/worldsim/src/lib/model/objects/Lamp';\r\nimport {TV} from '../../projects/worldsim/src/lib/model/objects/TV';\r\nimport {Thermometer} from '../../projects/worldsim/src/lib/model/objects/Thermometer';\r\nimport {LightSensor} from '../../projects/worldsim/src/lib/model/objects/LightSensor';\r\n\r\n@Component({\r\n  selector: 'app-configure',\r\n  templateUrl: 'configure.component.html',\r\n  styleUrls: ['configure.component.css']\r\n})\r\nexport class ConfigureComponent {\r\n  @Input() obj: Obj;\r\n\r\n  Lamp = Lamp;\r\n  TV = TV;\r\n  Thermometer = Thermometer;\r\n  LightSensor = LightSensor;\r\n}\r\n","import {JSONWorld} from '../../projects/worldsim/src/lib/model/types';\r\n\r\nexport const environments: JSONWorld[] = [\r\n  {\r\n    name: 'Maison',\r\n    scale: {\r\n      x: 2.6,\r\n      y: 1.8\r\n    },\r\n    objects: [\r\n      {\r\n        type: 'Lamp',\r\n        position: {\r\n          x: 260,\r\n          y: 270\r\n        },\r\n        name: 'Lampe du salon',\r\n        color: '#fff',\r\n        intensity: 0.8\r\n      },\r\n      {\r\n        type: 'Lamp',\r\n        position: {\r\n          x: 4,\r\n          y: 220\r\n        },\r\n        name: 'Lampe de Chambre 1',\r\n        color: '#f55',\r\n        intensity: 0.5\r\n      },\r\n      {\r\n        'type': 'Lamp',\r\n        'position': {\r\n          'x': 4,\r\n          'y': 270\r\n        },\r\n        'name': 'Lampe de Chambre 2',\r\n        'color': '#55f',\r\n        'intensity': 0.5\r\n      },\r\n      {\r\n        'type': 'TV',\r\n        'position': {\r\n          'x': 260,\r\n          'y': 100\r\n        },\r\n        'name': 'TV du salon',\r\n        'channel': 1,\r\n        'volume': 0.2\r\n      },\r\n      {\r\n        'type': 'Thermometer',\r\n        'position': {\r\n          'x': 260,\r\n          'y': 10\r\n        },\r\n        'name': 'Thermometre du salon',\r\n        'temperature': 22\r\n      }\r\n    ],\r\n    locations: [\r\n      {\r\n        'name': 'Entrée',\r\n        'width': 80,\r\n        'height': 100,\r\n        'position': {\r\n          x: 0,\r\n          y: 0\r\n        }\r\n      },\r\n      {\r\n        'name': 'Cuisine',\r\n        'width': 120,\r\n        'height': 100,\r\n        'position': {\r\n          x: 80,\r\n          y: 0\r\n        },\r\n        'avatars': [{name: 'Alice'}]\r\n      },\r\n      {\r\n        'name': 'Salon',\r\n        'width': 100,\r\n        'height': 300,\r\n        'position': {\r\n          x: 200,\r\n          y: 0\r\n        }\r\n      },\r\n      {\r\n        'name': 'Couloir 1',\r\n        'width': 200,\r\n        'height': 30,\r\n        'position': {\r\n          x: 0,\r\n          y: 100\r\n        }\r\n      },\r\n      {\r\n        'name': 'Couloir 2',\r\n        'width': 30,\r\n        'height': 170,\r\n        'position': {\r\n          x: 120,\r\n          y: 130\r\n        }\r\n      },\r\n      {\r\n        'name': 'WC',\r\n        'width': 50,\r\n        'height': 40,\r\n        'position': {\r\n          x: 150,\r\n          y: 130\r\n        }\r\n      },\r\n      {\r\n        'name': 'SDB',\r\n        'width': 50,\r\n        'height': 130,\r\n        'position': {\r\n          x: 150,\r\n          y: 170\r\n        }\r\n      },\r\n      {\r\n        'name': 'Chambres',\r\n        'width': 120,\r\n        'height': 170,\r\n        'position': {\r\n          x: 0,\r\n          y: 130\r\n        },\r\n        'sublocations': [\r\n          {\r\n            'name': 'Chambre 1',\r\n            'width': 120,\r\n            'height': 120,\r\n            'position': {\r\n              x: 0,\r\n              y: 0\r\n            },\r\n            'avatars': [{name: 'Bob'}]\r\n          },\r\n          {\r\n            'name': 'Chambre 2',\r\n            'width': 120,\r\n            'height': 50,\r\n            'position': {\r\n              x: 0,\r\n              y: 120\r\n            },\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    name:  'Appart',\r\n    scale: {\r\n      x: 4,\r\n      y: 4\r\n    },\r\n    objects: [\r\n      {\r\n        'type': 'Lamp',\r\n        'position': {\r\n          'x': 5,\r\n          'y': 5\r\n        },\r\n        'name': 'Lampe de la SDB',\r\n        'color': '#fff',\r\n        'intensity': 1\r\n      },\r\n      {\r\n        'type': 'Lamp',\r\n        'position': {\r\n          'x': 5,\r\n          'y': 85\r\n        },\r\n        'name': 'Lampe de la pièce',\r\n        'color': '#07f',\r\n        'intensity': .5\r\n      }\r\n    ],\r\n    locations: [\r\n      {\r\n        'name': 'Pièce',\r\n        'width': 100,\r\n        'height': 100,\r\n        'position': {\r\n          x: 0,\r\n          y: 0\r\n        },\r\n        sublocations: [\r\n          {\r\n            'name': 'SDB',\r\n            'width': 50,\r\n            'height': 50,\r\n            'position': {\r\n              x: 0,\r\n              y: 0\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import {Component, Input} from '@angular/core';\r\nimport {Lamp} from '../../../projects/worldsim/src/lib/model/objects/Lamp';\r\n\r\n@Component({\r\n  selector: 'app-show-map-lamp-icon',\r\n  styles: [`\r\n    /* Si besoin des border en inside, la passer sur un pseudo element ::after */\r\n    #t {\r\n      width: 500px;\r\n      height: 500px;\r\n      position: relative;\r\n    }\r\n    /* #t > div */\r\n    #t25, #t50, #t75, #t100, #tu, #bg {\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      border-radius: 50%;\r\n      border: 1px dashed orange;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n    #bg {\r\n      border: none;\r\n      background-color: rgba(255,255,255,.1);\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n    #tu {\r\n      width: 37%;\r\n      height: 37%;\r\n      border: 2px solid hsl(200, 100%, 50%);\r\n    }\r\n    #t25 {\r\n      width: 25%;\r\n      height: 25%;\r\n      border-color: green;\r\n    }\r\n    #t50 {\r\n      width: 50%;\r\n      height: 50%;\r\n    }\r\n    #t75 {\r\n      width: 75%;\r\n      height: 75%;\r\n    }\r\n    #t100 {\r\n      width: 100%;\r\n      height: 100%;\r\n      border-color: red;\r\n    }\r\n  `],\r\n  template: `\r\n    <div id=\"t\" [style.height]=\"dimens+'px'\" [style.width]=\"dimens+'px'\">\r\n      <div id=\"bg\"></div>\r\n      <div id=\"t25\"></div>\r\n      <div id=\"t50\"></div>\r\n      <div id=\"t75\"></div>\r\n      <div id=\"t100\"></div>\r\n      <div id=\"tu\"\r\n           [style.height]=\"(object.intensity*100)+'%'\"\r\n           [style.width]=\"(object.intensity*100)+'%'\"\r\n           [style.border-color]=\"object.color\"></div>\r\n    </div>\r\n  `\r\n})\r\nexport class ShowMapLampIconComponent {\r\n  @Input() object: Lamp;\r\n  @Input() dimens: number;\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {Lamp} from '../../../projects/worldsim/src/lib/model/objects/Lamp';\r\nimport {DecimalPipe} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-show-map-lamp',\r\n  template: `\r\n    <app-show-map-object-template\r\n        [object]=\"object\"\r\n        [props]=\"props\"\r\n        [onConfigure]=\"onConfigure\"\r\n        [modifiable]=\"false\"\r\n        displayName=\"Lamp\">\r\n      <app-show-map-lamp-icon [object]=\"object\" [dimens]=\"36\"></app-show-map-lamp-icon>\r\n    </app-show-map-object-template>\r\n  `\r\n})\r\nexport class ShowMapLampComponent {\r\n  @Input() object: Lamp;\r\n  @Input() onConfigure: (Obj) => void;\r\n\r\n  constructor(private decimalPipe: DecimalPipe) {}\r\n\r\n  props = [\r\n    // Intensity\r\n    () => this.decimalPipe.transform(this.object.intensity * 100, '1.0-2') + '%',\r\n    // Color\r\n    () => this.object.color\r\n  ];\r\n}\r\n","import {Component, HostListener, Input} from '@angular/core';\r\nimport {Location} from '../../../projects/worldsim/src/lib/model/Location';\r\nimport {Utils} from '../utils';\r\nimport {Avatar} from '../../../projects/worldsim/src/lib/model/Avatar';\r\n\r\n@Component({\r\n  selector: 'app-show-map-location',\r\n  styles: [`\r\n    .location {\r\n      position: absolute;\r\n    }\r\n    .location::before {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n      left: 0;\r\n      border: 2px solid black;\r\n    }\r\n    #display {\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      height: 100%;\r\n    }\r\n    .location-name {\r\n      font-size: 130%;\r\n      z-index: 1;\r\n    }\r\n    .can-drop {\r\n    }\r\n    .can-drop::after {\r\n      content: '';\r\n      position: absolute;\r\n      top: 0;\r\n      bottom: 0;\r\n      right: 0;\r\n      left: 0;\r\n      z-index: 2;\r\n      border: 2px solid red;\r\n    }\r\n    .avatar {\r\n      cursor: pointer;\r\n      text-align: center;\r\n    }\r\n    .avatar:hover {\r\n      color: red;\r\n    }\r\n  `],\r\n  template: `\r\n    <div\r\n        class=\"location\"\r\n        alx-dropzone\r\n        (alx-ondrop)=\"dropped($event)\"\r\n        [style.background-color]=\"color\"\r\n        alx-drag-over-css=\"can-drop\"\r\n        [style.top]=\"(location.position.y * magnificationY) + 'px'\"\r\n        [style.left]=\"(location.position.x * magnificationX) + 'px'\"\r\n        [style.width]=\"(location.width * magnificationX) + 'px'\"\r\n        [style.height]=\"(location.height * magnificationY) + 'px'\">\r\n      <app-show-map-location\r\n          *ngFor=\"let s of location.sublocations\"\r\n          [location]=\"s\"\r\n          [magnificationY]=\"magnificationY\"\r\n          [magnificationX]=\"magnificationX\">\r\n      </app-show-map-location>\r\n      <div id=\"display\" *ngIf=\"location.sublocations.length === 0\">\r\n        <div class=\"location-name\">\r\n          <div style=\"font-weight: bold\">{{location.name}}</div>\r\n          <div class=\"avatar\" *ngFor=\"let a of location.avatars\" [alx-draggable]=\"{location: location, avatar: a}\">\r\n            <i class=\"material-icons\">person_pin</i>\r\n            <span style=\"vertical-align: top\">{{a.name}}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class ShowMapLocationComponent {\r\n  color: string = Utils.randomColorHSL({min: 10, max: 15}, {min: 30, max: 40});\r\n\r\n  @Input() location: Location;\r\n  @Input() magnificationX: number;\r\n  @Input() magnificationY: number;\r\n\r\n  @HostListener('click') onClick() {\r\n    console.log(this.location.name);\r\n  }\r\n\r\n  dropped(e: {location: Location, avatar: Avatar}) {\r\n    if (this.location === e.location) return;\r\n\r\n    console.log('Dropped ' + e.avatar.name + ' from ' + e.location.name);\r\n    this.location.addAvatar(e.avatar);\r\n    e.location.removeAvatar(e.avatar);\r\n  }\r\n}\r\n","import {Component, Input, OnChanges, SimpleChanges} from '@angular/core';\r\nimport {Thermometer} from '../../../projects/worldsim/src/lib/model/objects/Thermometer';\r\nimport {Utils} from '../utils';\r\n\r\n@Component({\r\n  selector: 'app-show-map-thermometer',\r\n  template: `\r\n    <app-show-map-object-template\r\n        [object]=\"object\"\r\n        [props]=\"props\"\r\n        [onConfigure]=\"onConfigure\"\r\n        [modifiable]=\"true\"\r\n        [modificationValue]=\"object.temperature\"\r\n        [modificationMin]=\"Thermometer.TEMPERATURE_MIN\"\r\n        [modificationMax]=\"Thermometer.TEMPERATURE_MAX\"\r\n        [modificationFormat]=\"format\"\r\n        [modificationStrength]=\"3\"\r\n        [modification]=\"modify\"\r\n        displayName=\"Thermometer\"\r\n        [calculateColor]=\"calculateColor\">\r\n      <div>\r\n        <i class=\"material-icons md-36\" [style.color]=\"iconColor\">whatshot</i>\r\n      </div>\r\n    </app-show-map-object-template>\r\n  `\r\n})\r\nexport class ShowMapThermometerComponent implements OnChanges {\r\n  @Input() object: Thermometer;\r\n  @Input() onConfigure: (Obj) => void;\r\n\r\n  Thermometer = Thermometer;\r\n  iconColor: string;\r\n  format = 'Temp.: %d°C';\r\n\r\n  props = [\r\n    () => this.object.temperature + '°C'\r\n  ];\r\n\r\n  calculateColor = (n: number) => {\r\n    const cold = '0000ff';\r\n    const hot = 'ff0000';\r\n\r\n    return Utils.scaleColor(n, cold, hot);\r\n  };\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const ratio = (this.object.temperature - Thermometer.TEMPERATURE_MIN) / (Thermometer.TEMPERATURE_MAX - Thermometer.TEMPERATURE_MIN);\r\n    this.iconColor = this.calculateColor(ratio);\r\n  }\r\n\r\n  protected modify(modifier: number) {\r\n    this.object.modifyTemperature(modifier);\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {TV} from '../../../projects/worldsim/src/lib/model/objects/TV';\r\nimport {DecimalPipe} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-show-map-tv',\r\n  template: `\r\n    <app-show-map-object-template\r\n        [object]=\"object\"\r\n        [props]=\"props\"\r\n        [onConfigure]=\"onConfigure\"\r\n        [modifiable]=\"false\"\r\n        displayName=\"TV\">\r\n      <div>\r\n        <i class=\"material-icons md-36\">tv</i>\r\n      </div>\r\n    </app-show-map-object-template>\r\n  `\r\n})\r\nexport class ShowMapTvComponent {\r\n  @Input() object: TV;\r\n  @Input() onConfigure: (Obj) => void;\r\n\r\n  constructor(private decimalPipe: DecimalPipe) {}\r\n\r\n  props = [\r\n    () => this.object.channel,\r\n    () => this.decimalPipe.transform(this.object.volume * 100, '1.0-2') + '%'\r\n  ];\r\n}\r\n","import {Component, HostListener, Input, OnInit} from '@angular/core';\r\nimport {Obj} from '../../projects/worldsim/src/lib/model/Obj';\r\n\r\n@Component({\r\n  selector: 'app-show-map-object-template',\r\n  styles: [`\r\n    #display-top {\r\n      position: absolute;\r\n      bottom: 100%;\r\n      left: 0;\r\n      right: 0;\r\n      font-size: 12px;\r\n      background-color: #828282;\r\n      color: transparent;\r\n    }\r\n    #display-bottom {\r\n      text-align: center;\r\n      position: absolute;\r\n      top: 100%;\r\n      left: 0;\r\n      right: 0;\r\n      font-size: 13px;\r\n      background-color: aquamarine;\r\n    }\r\n    #container {\r\n      min-width: 88px;\r\n      display: flex;\r\n      position: relative;\r\n      padding: 4px;\r\n    }\r\n    #icon {\r\n      width: 36px;\r\n      height: 36px;\r\n      margin-right: 4px;\r\n    }\r\n  `],\r\n  template: `\r\n    <div id=\"container\" [ngStyle]=\"styles\">\r\n      <div id=\"display-top\">\r\n        <app-show-map-slider\r\n            *ngIf=\"mOn && modifiable\"\r\n            [val]=\"modificationValue + modifier\"\r\n            [min]=\"modificationMin\"\r\n            [max]=\"modificationMax\"\r\n            [format]=\"modificationFormat\"\r\n            [calculateColor]=\"calculateColor\">\r\n        </app-show-map-slider>\r\n      </div>\r\n      <div id=\"icon\">\r\n        <ng-content></ng-content>\r\n      </div>\r\n      <div>\r\n        <div *ngFor=\"let p of props\" style=\"line-height: 18px\">{{p()}}</div>\r\n      </div>\r\n      <div *ngIf=\"mOn && displayName != null\"\r\n           id=\"display-bottom\">\r\n        <span style=\"font-weight: bold; color: black;\">{{displayName}}</span>\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class ShowMapObjectTemplateComponent implements OnInit {\r\n  @Input() object: Obj;\r\n  @Input() props: (() => string)[];\r\n  @Input() onConfigure: (o: Obj) => void;\r\n  @Input() displayName: string;\r\n  @Input() calculateColor: (n: number) => string;\r\n\r\n  @Input() modifiable: boolean;\r\n  @Input() modification: (m: number) => void;\r\n  @Input() modificationValue: number;\r\n  @Input() modificationFormat: string;\r\n  @Input() modificationMin: number;\r\n  @Input() modificationMax: number;\r\n  @Input() modificationStrength: number;\r\n\r\n  protected mDown = false;\r\n  protected mOn = false;\r\n  protected last: MouseEvent;\r\n  protected modifier = 0;\r\n  protected styles = {\r\n    background: 'none',\r\n    cursor: this.modifiable ? 'w-resize' : 'pointer'\r\n  };\r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    this.styles.background = '#aaa8';\r\n    this.mOn = true;\r\n\r\n    this.mouseEnter();\r\n  }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.styles.background = '#fff0';\r\n    this.mDown = false;\r\n    this.mOn = false;\r\n\r\n    this.launchModification();\r\n    this.mouseLeave();\r\n  }\r\n\r\n  @HostListener('mousedown', ['$event']) onMouseDown(event: MouseEvent) {\r\n    this.mDown = true;\r\n    this.last = event;\r\n\r\n    this.mouseDown();\r\n  }\r\n\r\n  @HostListener('mousemove', ['$event']) onMouseMove(event: MouseEvent) {\r\n    if (this.mDown) {\r\n      this.modifier = Math.round((event.clientX - this.last.clientX) / (this.modificationStrength == null ? 1 : this.modificationStrength));\r\n    }\r\n\r\n    this.mouseMove();\r\n  }\r\n\r\n  @HostListener('mouseup') onMouseUp() {\r\n    this.mDown = false;\r\n\r\n    this.launchModification();\r\n    this.mouseUp();\r\n  }\r\n\r\n  @HostListener('click') onClick() {\r\n    this.onConfigure(this.object);\r\n    this.mouseClick();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.styles.cursor = this.modifiable ? 'w-resize' : 'pointer';\r\n  }\r\n\r\n  protected mouseEnter() {\r\n  }\r\n\r\n  protected mouseLeave() {\r\n  }\r\n\r\n  protected mouseDown() {\r\n  }\r\n\r\n  protected mouseMove() {\r\n  }\r\n\r\n  protected mouseUp() {\r\n  }\r\n\r\n  protected mouseClick() {\r\n  }\r\n\r\n  private launchModification() {\r\n    if (!this.modifiable || this.modifier === 0) {\r\n      return;\r\n    }\r\n\r\n    this.modification(this.modifier);\r\n    this.modifier = 0;\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {Thermometer} from '../../projects/worldsim/src/lib/model/objects/Thermometer';\r\nimport {Obj} from '../../projects/worldsim/src/lib/model/Obj';\r\nimport {Lamp} from '../../projects/worldsim/src/lib/model/objects/Lamp';\r\nimport {TV} from '../../projects/worldsim/src/lib/model/objects/TV';\r\n\r\n@Component({\r\n  selector: 'app-show-map-object',\r\n  template: `\r\n    <div [style.top]=\"(object.position.y * magnificationY) + 'px'\"\r\n         [style.left]=\"(object.position.x * magnificationX) + 'px'\"\r\n         style=\"position: absolute;\">\r\n      <app-show-map-thermometer\r\n        *ngIf=\"Thermometer.isInstance(object)\"\r\n        [object]=\"object\"\r\n        [onConfigure]=\"onConfigure\">\r\n      </app-show-map-thermometer>\r\n      <app-show-map-tv\r\n        *ngIf=\"TV.isInstance(object)\"\r\n        [object]=\"object\"\r\n        [onConfigure]=\"onConfigure\">\r\n      </app-show-map-tv>\r\n      <app-show-map-lamp\r\n        *ngIf=\"Lamp.isInstance(object)\"\r\n        [object]=\"object\"\r\n        [onConfigure]=\"onConfigure\">\r\n      </app-show-map-lamp>\r\n    </div>\r\n  `\r\n})\r\nexport class ShowMapObjectComponent {\r\n  @Input() object: Obj;\r\n  @Input() onConfigure: (Obj) => void;\r\n\r\n  @Input() magnificationX: number;\r\n  @Input() magnificationY: number;\r\n\r\n  Thermometer = Thermometer;\r\n  Lamp = Lamp;\r\n  TV = TV;\r\n}\r\n","import {Component, Input, OnChanges} from '@angular/core';\r\nimport {DecimalPipe} from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-show-map-slider',\r\n  styles: [`\r\n    #overlay {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      bottom: 0;\r\n      background-color: hsla(200, 50%, 60%, .6);\r\n      opacity: .66;\r\n    }\r\n    #overtext {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      left: 0;\r\n      bottom: 0;\r\n      text-align: center;\r\n      color: white;\r\n    }\r\n  `],\r\n  template: `\r\n    R\r\n    <div id=\"overlay\" [style.width]=\"progress+'%'\" [style.background-color]=\"progressColor\"></div>\r\n    <div id=\"overtext\">{{sf}}</div>\r\n  `\r\n})\r\nexport class ShowMapSliderComponent implements OnChanges {\r\n  @Input() val: number;\r\n  @Input() min: number;\r\n  @Input() max: number;\r\n  @Input() format: string;\r\n  @Input() calculateColor: (n: number) => string;\r\n\r\n  sf: string;\r\n  progress: number;\r\n  progressColor: string;\r\n\r\n  constructor(private decimalPipe: DecimalPipe) {}\r\n\r\n  ngOnChanges() {\r\n    const val = Math.max(this.min, Math.min(this.val, this.max));\r\n    this.sf = this.format.replace('%d', '' + this.decimalPipe.transform(val, '1.0-2'));\r\n    this.progress = ((val - this.min) / (this.max - this.min));\r\n    this.progressColor = this.calculateColor(this.progress);\r\n    this.progress *= 100;\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\nimport {World} from '../../projects/worldsim/src/lib/model/World';\r\n\r\n@Component({\r\n  selector: 'app-show-map',\r\n  styles: [`\r\n    #container {\r\n      position: relative;\r\n      border: 2px solid black;\r\n      color: white;\r\n    }\r\n  `],\r\n  template: `\r\n    <div id=\"container\"\r\n         class=\"no-select\"\r\n         alx-dragdrop\r\n         [style.height]=\"world.calculateHeight() * magnificationY + 'px'\"\r\n         [style.width]=\"world.calculateWidth() * magnificationX + 'px'\">\r\n      <app-show-map-location\r\n        *ngFor=\"let l of world.locations\"\r\n        [location]=\"l\"\r\n        [magnificationX]=\"magnificationX\"\r\n        [magnificationY]=\"magnificationY\">\r\n      </app-show-map-location>\r\n      <app-show-map-object\r\n        *ngFor=\"let o of world.objects\"\r\n        [object]=\"o\"\r\n        [magnificationX]=\"magnificationX\"\r\n        [magnificationY]=\"magnificationY\"\r\n        [onConfigure]=\"onConfigure\">\r\n      </app-show-map-object>\r\n    </div>\r\n  `\r\n})\r\nexport class ShowMapComponent {\r\n  @Input() world: World;\r\n  @Input() onConfigure: (Obj) => void;\r\n  @Input() magnificationX: number;\r\n  @Input() magnificationY: number;\r\n}\r\n","export class Utils {\r\n  static dec2hex(x: number): string {\r\n    const xs = x.toString(16);\r\n    return (xs.length === 1) ? '0' + xs : xs;\r\n  }\r\n\r\n  static scaleColor(ratio: number, min: string, max: string): string {\r\n    const ratioInv = 1 - ratio;\r\n\r\n    const parse = (s: string, r: number): number => {\r\n      return parseInt(s, 16) * r;\r\n    };\r\n\r\n    const red = Math.ceil(parse(max.substring(0, 2), ratio) + parse(min.substring(0, 2), ratioInv));\r\n    const green = Math.ceil(parse(max.substring(2, 4), ratio) + parse(min.substring(2, 4), ratioInv));\r\n    const blue = Math.ceil(parse(max.substring(4, 6), ratio) + parse(min.substring(4, 6), ratioInv));\r\n\r\n    return '#' + Utils.dec2hex(red) + Utils.dec2hex(green) + Utils.dec2hex(blue);\r\n  }\r\n\r\n  static randomColorRGB(min: number = 0, max: number = 256): string {\r\n    if (min >= max) {\r\n      console.error('randomColor: min can\\'t be superior to max.');\r\n      return '#000';\r\n    }\r\n\r\n    return 'rgb(' +\r\n      Math.floor(min + Math.random() * (Math.min(256, max) - min)) + ', ' +\r\n      Math.floor(min + Math.random() * (Math.min(256, max) - min)) + ', ' +\r\n      Math.floor(min + Math.random() * (Math.min(256, max) - min)) + ')';\r\n  }\r\n\r\n  static randomColorHSL(contrast: {min: number, max: number}, lightness: {min: number, max: number}): string {\r\n    if (contrast === null || contrast.min < 0 || contrast.max > 100) contrast = {min: 0, max: 100};\r\n    if (lightness === null || lightness.min < 0 || lightness.max > 100) lightness = {min: 0, max: 100};\r\n\r\n    return 'hsl(' +\r\n        Math.floor(Math.random() * 360) + ',' +\r\n        Math.floor(contrast.min + Math.random() * (contrast.max - contrast.min)) + '%,' +\r\n        Math.floor(lightness.min + Math.random() * (lightness.max - lightness.min)) + '%)';\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nimport 'hammerjs';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */"],"sourceRoot":""}